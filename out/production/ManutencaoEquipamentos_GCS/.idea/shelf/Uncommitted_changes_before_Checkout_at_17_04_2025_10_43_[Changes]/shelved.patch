Index: AppManutencao.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.time.LocalDate;\r\nimport java.util.ArrayList;\r\nimport java.util.Scanner;\r\n\r\npublic class AppManutencao {\r\n    private ArrayList<Manutencao> manutencoes = new ArrayList<>();\r\n    private Equipamento equipamento;\r\n    private Funcionario funcionario;\r\n    private AppEquipamento appEquipamento;\r\n    private AtualizaManutencao atualizaManutencao;\r\n\r\n    Scanner in = new Scanner(System.in);\r\n\r\n    public AppManutencao() {\r\n        this.appEquipamento = appEquipamento;\r\n        this.atualizaManutencao = new AtualizaManutencao(this);\r\n    }\r\n\r\n    public ArrayList<Manutencao> getManutencoes() {\r\n        return manutencoes;\r\n    }\r\n\r\n    public void executar() {\r\n        int opcao;\r\n        do {\r\n            menuManutencao();\r\n            System.out.println(\"Opção desejada: \");\r\n            opcao = in.nextInt();\r\n            in.nextLine();\r\n            switch (opcao) {\r\n                case 1:\r\n                    novaManutencao();\r\n                    break;\r\n                case 2:\r\n                    atualizaManutencao.alterarDisponibilidadeEquipamento();\r\n                    break;\r\n                case 3:\r\n                    exibirManutencaoMaisRecente();\r\n                    break;\r\n                case 4:\r\n                    break;\r\n                case 5:\r\n                    break;\r\n                default:\r\n                    System.out.println(\"Opção inválida\");\r\n            }\r\n        } while (opcao != 0);\r\n    }\r\n\r\n    private void menuManutencao() {\r\n        System.out.println(\"Menu da Manutenção\");\r\n        System.out.println(\"1 - Criar uma nova manutenção\");\r\n        System.out.println(\"2 - Alterar status de uma manutenção\");\r\n        System.out.println(\"3 - Exibir a última manutenção de um equipamento\");\r\n        System.out.println(\"4 - Exibir todas as manutenções de um equipamento\");\r\n        System.out.println(\"5 - Deshabilitar um equipamento\");\r\n        System.out.println(\"0 - Sair\");\r\n    }\r\n\r\n    public boolean isEmManutencao(Equipamento equipamento) {\r\n        Manutencao manutencaoMaisRecente = null;\r\n\r\n        for (Manutencao m : manutencoes) {\r\n            System.out.println(\"Comparando ID do Equipamento: \" + equipamento.getId() + \" com ID da Manutenção: \"\r\n                    + m.getEquipamento().getId());\r\n\r\n            if (m.getEquipamento().getId() == equipamento.getId()) {\r\n                System.out.println(\"Encontrado equipamento com ID: \" + equipamento.getId());\r\n                if (manutencaoMaisRecente == null\r\n                        || m.getDataEntrada().isAfter(manutencaoMaisRecente.getDataEntrada())) {\r\n                    manutencaoMaisRecente = m;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (manutencaoMaisRecente != null) {\r\n            String status = manutencaoMaisRecente.getStatus();\r\n            if (!status.equalsIgnoreCase(\"concluída\")) {\r\n                System.out.println(\"O equipamento está em manutenção - status: \" + status);\r\n                return true;\r\n            } else {\r\n                System.out.println(\"O equipamento não está em manutenção - última manutenção realizada \"\r\n                        + manutencaoMaisRecente.getDataEntrada());\r\n            }\r\n        } else {\r\n            System.out.println(\"O equipamento não está em manutenção - nenhuma manutenção registrada.\");\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    private LocalDate gerarDataAtual() {\r\n        return LocalDate.now();\r\n    }\r\n\r\n    private LocalDate gerarDataSaida() {\r\n        return LocalDate.now();\r\n    }\r\n\r\n    private void novaManutencao() {\r\n\r\n        LocalDate dataEntrada = gerarDataAtual();\r\n        LocalDate dataSaida = gerarDataSaida();\r\n        String estado = \"Solicitada\";\r\n        boolean isEmManutencao = true;\r\n\r\n        System.out.println(\"Novo Registro de Manutenção\");\r\n        System.out.print(\"Informe o ID do equipamento: \");\r\n        int idEquipamento = in.nextInt();\r\n        in.nextLine();\r\n\r\n        Equipamento equipamento = AppEquipamento.buscarEquipamentoPorId(idEquipamento);\r\n        if (equipamento == null) {\r\n            System.out.println(\"Equipamento não encontrado!\");\r\n            return;\r\n        }\r\n\r\n        System.out.println(\"Equipamento selecionado: \" + equipamento.getNomeCurto());\r\n        equipamento.setDisponibilidade(\"Indisponível\");\r\n        System.out.print(\"Descrição do Problema: \");\r\n        String descricaoProblema = in.nextLine();\r\n\r\n        Funcionario funcionario = AppFuncionario.localizarFuncionarioPeloNome();\r\n        if (funcionario == null) {\r\n            System.out.println(\"Funcionário não encontrado!\");\r\n            return;\r\n        }\r\n\r\n        System.out.println(\"Funcionário: \" + funcionario.getNome());\r\n\r\n        Manutencao nova = new Manutencao(\r\n                equipamento,\r\n                estado,\r\n                isEmManutencao,\r\n                descricaoProblema,\r\n                dataEntrada,\r\n                dataSaida,\r\n                funcionario);\r\n\r\n        manutencoes.add(nova);\r\n        System.out.println(\"Manutenção registrada com sucesso!\");\r\n        System.out.println(\"→ Equipamento agora está com disponibilidade: \" + equipamento.getDisponibilidade());\r\n    }\r\n\r\n    public void exibirManutencaoMaisRecente() {\r\n        System.out.print(\"Informe o ID do equipamento: \");\r\n        int idEquipamento = in.nextInt();\r\n        in.nextLine();\r\n\r\n        Manutencao manutencaoMaisRecente = null;\r\n\r\n        for (Manutencao m : manutencoes) {\r\n            if (m.getEquipamento().getId() == idEquipamento) {\r\n                if (manutencaoMaisRecente == null ||\r\n                        m.getDataEntrada().isAfter(manutencaoMaisRecente.getDataEntrada())) {\r\n                    manutencaoMaisRecente = m;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (manutencaoMaisRecente != null) {\r\n            System.out.println(\"Última manutenção: \" + manutencaoMaisRecente.getDescricaoProblema() +\r\n                    \" em \" + manutencaoMaisRecente.getDataEntrada());\r\n        } else {\r\n            System.out.println(\"Nenhuma manutenção registrada para este equipamento.\");\r\n        }\r\n    }\r\n\r\n    public void exibirUltimaManutencao(int idEquipamento) {\r\n        Manutencao manutencaoMaisRecente = null;\r\n\r\n        for (Manutencao m : manutencoes) {\r\n            if (m.getEquipamento().getId() == idEquipamento) {\r\n                if (manutencaoMaisRecente == null ||\r\n                        m.getDataEntrada().isAfter(manutencaoMaisRecente.getDataEntrada())) {\r\n                    manutencaoMaisRecente = m;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (manutencaoMaisRecente != null) {\r\n            System.out.println(\"Última manutenção: \" + manutencaoMaisRecente.getDescricaoProblema() +\r\n                    \" em \" + manutencaoMaisRecente.getDataEntrada());\r\n        } else {\r\n            System.out.println(\"Nenhuma manutenção registrada para este equipamento.\");\r\n        }\r\n    }\r\n}\r\n
===================================================================
diff --git a/AppManutencao.java b/AppManutencao.java
--- a/AppManutencao.java	(revision 03c227a3ac56a07e0e5d8d188ec6eae2c5699fff)
+++ b/AppManutencao.java	(date 1744897031863)
@@ -41,6 +41,9 @@
                     break;
                 case 5:
                     break;
+                case 6:
+                    listarEquipamentosEmManutencao();
+                    break;
                 default:
                     System.out.println("Opção inválida");
             }
@@ -54,6 +57,7 @@
         System.out.println("3 - Exibir a última manutenção de um equipamento");
         System.out.println("4 - Exibir todas as manutenções de um equipamento");
         System.out.println("5 - Deshabilitar um equipamento");
+        System.out.println("6 - Listar equipamentos em manutenção");
         System.out.println("0 - Sair");
     }
 
@@ -185,4 +189,9 @@
             System.out.println("Nenhuma manutenção registrada para este equipamento.");
         }
     }
+
+    public void listarEquipamentosEmManutencao() {
+        ControleManutencao controleManutencao = new ControleManutencao(manutencoes);
+        controleManutencao.listarEquipamentosEmManutencao();
+    }
 }
